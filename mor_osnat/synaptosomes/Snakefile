configfile: 'config.yaml'

samples = config['samples'].keys()
samples = ['sup2_2']
bt2_rRNA_index = config['bt2_rRNA_index']
star_index = config['star_index']
bwa_index = config['bwa_index']

fc2 = config['find_circ2_command']

data_root= 'data/'

reads_root= data_root + 'reads/'
mapping_root= data_root + 'mapping/'

raw_reads_root= reads_root + 'raw/'
raw_reads_out= raw_reads_root + '{sample}.fastq.gz'

ribo_depleted_root= reads_root + 'ribo_depleted/'
ribo_depleted_out= ribo_depleted_root + '{sample}.depleted.fastq.gz'
ribo_depleted_log= ribo_depleted_root + '{sample}.log'

# star settings
star_suffix = 'Aligned.sortedByCoord.out.bam'
star_out_root = mapping_root + 'star/'
star_out_prefix = star_out_root + '{sample}.'
star_out = star_out_prefix + star_suffix
star_err_file = star_out_prefix + 'stderr.txt'

# find circ2
find_circ2_root = mapping_root + 'circrna/' 
find_circ2_out_path = find_circ2_root + '{sample}/'
find_circ2_bwa_err = find_circ2_out_path + 'bwa.stderr.log'
find_circ2_bwa_pipe = find_circ2_out_path + 'bwa_mapped.pipe.bam'
find_circ2_err = find_circ2_out_path + 'fc.stderr.log'
find_circ2_out = find_circ2_out_path + 'find_circ_run/'

rule all:
	input:
		#expand(star_out, sample=samples),
		expand(find_circ2_out, sample=samples)

rule create_read_symlinks:
	output:
		raw_reads_out	
	params:
		reads_p_link= lambda wildcards: config['reads_dir'] + config['samples'][wildcards.sample]
	shell:
		"""
		mkdir -p {reads_root}
		ln -s {params.reads_p_link} {output}
		"""

rule deplete_rRNA:
	input:
		raw_reads_out
	output:
		reads= ribo_depleted_out,
		#reads= temp(ribo_depleted_out),
		logfile= ribo_depleted_log
	threads: 8
	shell:
		"""
		bowtie2 -p {threads} -x {bt2_rRNA_index} -U {input} \
			--very-fast-local \
			--un-gz {output.reads} > /dev/null 2> {output.logfile}
		"""

rule map_with_star:
	input:
		ribo_depleted_out
	output:
		star_out
	threads: 4
	params:
		out_root= star_out_root,
		out_prefix= star_out_prefix,
		err_file= star_err_file
	shell:
		"""
		mkdir -p {params.out_root}

		STAR    --runThreadN {threads} \
				--outFileNamePrefix {params.out_prefix} \
				--runMode alignReads \
				--genomeDir {star_index} \
				--readFilesIn {input} \
				--readFilesCommand zcat \
				--outSAMtype BAM SortedByCoordinate	2>{params.err_file}
		"""

rule map_with_bwa_mem:
	input:
		ribo_depleted_out
	output:
		bwa_out= pipe(find_circ2_bwa_pipe),
		bwa_err= find_circ2_bwa_err
	threads: 8
	shell:
		"""
		bwa mem -t {threads} -k 14 -T 1 -L 3,3 -O 6,6 -E 3,3 {bwa_index} {input} 2> {output.bwa_err} | \
		samtools view -Sbuh > {output.bwa_out}
		"""

rule find_circ2:
	input:
		find_circ2_bwa_pipe
	output:
		fc_out= directory(find_circ2_out)
	conda:
		"envs/find_circ2.yaml"
	threads: 8
	params:
		fc_err= lambda wildcards: expand(find_circ2_err, sample=wildcards.sample)
	conda:
		'envs/find_circ2.yaml'
	shell:
		"""
		python2 {fc2} --genome {bwa_index} --name {wildcards.sample} --output {output.fc_out} {input} 2> {params.fc_err} 
		"""
